(function () {
  // 🌊 Auto-skip Threshold if already on Google
  if (location.hostname.includes("google")) {
    runAqua();
    return;
  }

  // 🌀 Threshold Prompt
  const threshold = document.createElement("div");
  threshold.style = `
    position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);
    background: #001f2f; color: #00ffff; padding: 28px;
    font-family: 'Courier New', monospace; font-size: 16px;
    border: 2px solid #00ffff; border-radius: 12px;
    box-shadow: 0 0 25px #00ffff, inset 0 0 10px #002;
    text-align: center; z-index: 99999;
  `;
  threshold.innerHTML = `
    <p>This GUI flows best on <b>google.com</b>.<br>Would you like to go there?</p>
    <div style="margin-top: 15px;">
      <button id="thresholdYes">Yes</button>
      <button id="thresholdNo">No</button>
      <div style="margin-top: 10px; font-size: 13px; color: #aaa;">
        If you're already on google.com, click No
      </div>
    </div>
  `;
  document.body.appendChild(threshold);

  document.getElementById("thresholdYes").onclick = () => {
    threshold.remove();
    window.location.href = "https://www.google.com";
  };

  document.getElementById("thresholdNo").onclick = () => {
    threshold.remove();
    runAqua();
  };

  // 🌊 Aqua Core Logic
  function runAqua() {
    const label = document.createElement("div");
    label.textContent = "Aqua Interface — Sovereign Pulse";
    label.style = `
      position: fixed; top: 40px; left: 0; width: 100%;
      text-align: center; font-family: monospace;
      font-size: 16px; color: #00ffff;
      z-index: 10001;
    `;
    document.body.appendChild(label);

    function makeDraggable(el) {
      let isDragging = false, offsetX, offsetY;
      el.addEventListener("mousedown", (e) => {
        const bounds = el.getBoundingClientRect();
        const edgeSize = 10;
        const isNearEdge = (
          e.clientX - bounds.left <= edgeSize ||
          bounds.right - e.clientX <= edgeSize ||
          e.clientY - bounds.top <= edgeSize ||
          bounds.bottom - e.clientY <= edgeSize
        );
        if (isNearEdge) {
          isDragging = true;
          offsetX = e.clientX - el.offsetLeft;
          offsetY = e.clientY - el.offsetTop;
          el.style.cursor = "move";
        }
      });
      document.addEventListener("mouseup", () => {
        isDragging = false;
        el.style.cursor = "default";
      });
      document.addEventListener("mousemove", (e) => {
        if (isDragging) {
          el.style.left = (e.clientX - offsetX) + "px";
          el.style.top = (e.clientY - offsetY) + "px";
        }
      });
    }

    function logRipple(entry) {
      const viewer = document.getElementById("logsGUI");
      if (!viewer) return;
      const timestamp = new Date().toISOString();
      viewer.textContent += `[${timestamp}] ${entry}\n`;
      viewer.scrollTop = viewer.scrollHeight;
    }

    function createAquaTray({ id, label, color, fileURL, posLeft, posTop }) {
      const viewer = document.createElement("div");
      viewer.id = `${id}GUI`;
      viewer.style = `
        position: fixed; top: ${posTop}px; left: ${posLeft}px; width: 600px; height: 400px;
        background: #001f2f; color: ${color}; padding: 20px;
        font-family: monospace; font-size: 14px;
        border-radius: 12px; box-shadow: 0 0 20px ${color};
        overflow: auto; white-space: pre-wrap; z-index: 9998;
        display: none;
      `;
      document.body.appendChild(viewer);
      makeDraggable(viewer);

      const tabBtn = document.createElement("button");
      tabBtn.textContent = label;
      tabBtn.style = `
        display: block; width: 60px; margin: 10px auto;
        padding: 10px; font-size: 14px;
        background: ${color}; color: #001f2f;
        border-radius: 10px; border: none;
        font-family: 'Comfortaa', cursive;
        cursor: pointer; box-shadow: 0 0 8px ${color};
      `;
      tabBtn.onclick = () => {
        if (viewer.style.display === "none") {
          viewer.textContent = `🌊 Initializing ${label}...`;
          viewer.style.display = "block";
          fetch(fileURL)
            .then(res => res.ok ? res.text() : Promise.reject("Failed to load"))
            .then(code => {
              logRipple(`${id} tray opened`);
              if (id === "core") {
                try {
                  eval(code);
                } catch (err) {
                  viewer.textContent = `❌ Error running core: ${err}`;
                  logRipple(`core execution failed`);
                }
              } else {
                viewer.textContent = code;
                logRipple(`${id} tray initialized`);
              }
            })
            .catch(err => viewer.textContent = `❌ Error loading code: ${err}`);
        } else {
          viewer.style.display = "none";
        }
      };

      document.getElementById("aquaTrays").appendChild(tabBtn);
    }

    let trayBar = document.getElementById("aquaTrays");
    if (!trayBar) {
      trayBar = document.createElement("div");
      trayBar.id = "aquaTrays";
      trayBar.style = `
        position: fixed; top: 80px; left: 0; width: 80px;
        background: #000a12; padding-top: 20px;
        border-right: 2px solid #00ffff; z-index: 10000;
      `;
      document.body.appendChild(trayBar);
    }

    const trays = [
      { id: "disk", label: "💾 disk", color: "#00eaff", posLeft: 100, posTop: 100 },
      { id: "labs", label: "🧪 labs", color: "#00c8ff", posLeft: 100, posTop: 550 },
      { id: "clickr", label: "🎮 clickr", color: "#00ffff", posLeft: 750, posTop: 100 },
      { id: "console", label: "🧠 console", color: "#00ffcc", posLeft: 1400, posTop: 100 },
      { id: "logs", label: "📜 logs", color: "#00ffaa", posLeft: 1400, posTop: 550 },
      { id: "codes", label: "🔐 codes", color: "#00f4f4", posLeft: 750, posTop: 550 },
      { id: "dread", label: "🖤 dread", color: "#00aaff", posLeft: 2100, posTop: 100 },
      { id: "core", label: "🧿 core", color: "#00ffaa", posLeft: 2100, posTop: 1000 },
      { id: "credits", label: "🎖️ credits", color: "#00ccff", posLeft: 100, posTop: 1000 }
    ];
    trays.forEach(tray => {
      tray.fileURL = `https://raw.githubusercontent.com/mixishere/The-Mix-Archive/main/${tray.id}`;
      createAquaTray(tray);
    });

    window.addEventListener("keydown", (e) => {
      if (e.key === "\\") {
        const viewers = document.querySelectorAll("[id$='GUI']");
        const trayBar = document.getElementById("aquaTrays");
        viewers.forEach(view => {
          view.style.display = (view.style.display === "none") ? "block" : "none";
        });
        if (trayBar) {
          trayBar.style.display = (trayBar.style.display === "none") ? "block" : "none";
        }
        const logs = document.getElementById("logsGUI");
        if (logs) {
          const timestamp = new Date().toISOString();
          logs.textContent += `[${timestamp}] 🌫 Stealth mode toggled (trays + viewers)\n`;
          logs.scrollTop = logs.scrollHeight;
        }
      }
    });
  }
})();
